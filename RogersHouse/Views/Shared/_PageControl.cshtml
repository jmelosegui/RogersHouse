@model RogerHouse.Domain.Entities.Page
@using Telerik.Web.Mvc.UI
@(
 Layout = null
)
<style type="text/css">
    .html-view .t-button-wrapper
    {
        padding: .5em 0;
    }
    
    #htmlCancel
    {
        float: right;
    }
    
    .textarea
    {
        border-width: 1px;
        border-style: solid;
    }
    
    .textarea textarea
    {
        margin: 0;
        padding: 0;
        border: 0;
        font: normal 12px Consolas,Courier New,monospace;
        width: 100%;
        height: 300px;
    }
</style>
@Html.HiddenFor(m => m.PageId)
<p>
    <label for="MenuTitle" class="form_c1" title="It shows in the menu site">
        Menu text:<br />
    </label>
    <span class="form_c2">
        @Html.TextBoxFor(m => m.Path, new { style = "width:580px" })
        @Html.ValidationMessageFor(m => m.Path, "*")
    </span>
    <br />
    @Html.CheckBoxFor(m => m.ShowInMenu)
    <label for="ShowInMenu" title="If unchecked, menu title will not show in menu">
        Show in menu.</label>
    @Html.CheckBoxFor(m => m.Visible)
    <label for="Visible" title="If unchecked, just the admin can see the page (useful while the page is in edit process)">
        Everyone can view the page.</label>
</p>
<p>
    <label for="Title" class="form_c1" title="Page Title (it shows in browser title)">
        Page title:<br />
    </label>
    <span class="form_c2">
        @Html.TextBoxFor(m => m.Title, new { style = "width:580px" })
        @Html.ValidationMessageFor(m => m.Title, "*")
    </span>
</p>
<p>
    <label for="Order" class="form_c1" title="Orden inside the main manu">
        Order:<br />
    </label>
    <span class="form_c2">
        @Html.TextBoxFor(m => m.Order)
        @Html.ValidationMessageFor(m => m.Order, "*")
    </span>
</p>
<p>
    <label for="Body" class="form_c1" title="Page content">
        Body content:
    </label>
    <span class="form_c2">
        @Html.ValidationMessageFor(model => model.Body, "*")
        @(Html.Telerik().Editor()
                        .Name("Body")
                        .HtmlAttributes(new { style = "height:350px;" })
                        .Tools(tools => tools.Separator()
						                     .Custom(settings => settings.HtmlAttributes(new { @class = "t-html" })))
                        .Value(Model.Body))
    </span>
</p>
<p>
    <input type="submit" class="button" size="15" name="Save" value="Save" />
</p>
<script type="text/javascript">
    var htmlSourcePopup;
    function showHtml(e) {
        e.stopPropagation();
        e.preventDefault();

        var editor = $('#Body').data('tEditor');
        var html = editor.value();
        if (!htmlSourcePopup) {
            htmlSourcePopup =
                    $('<div class="html-view">' + '<div class="textarea t-state-default"><textarea></textarea></div>' + '<div class="t-button-wrapper">' + '<button id="htmlCancel" class="t-button">Cancel</button>' + '<button id="htmlUpdate" class="t-button">Update</button>' + '<div>' + '</div>')
                    .css('display', 'none')
                  .tWindow({
                      title: 'View Generated HTML',
                      modal: true,
                      resizable: false,
                      draggable: true,
                      width: 700,
                      onLoad: function () {
                          var $popup = $(this);
                          $popup.find('.textarea')
                                    .css('width', function () {
                                        return 700 - (this.offsetWidth - $(this).width());
                                    })
                                    .focus()
                                  .end()
                                  .find('#htmlCancel')
                                    .click(function () {
                                        htmlSourcePopup.close();
                                    })
                                  .end()
                                  .find('#htmlUpdate')
                                    .click(function () {
                                        var value = $popup.find('textarea').val();
                                        editor.value(value);
                                        htmlSourcePopup.close();
                                    });
                      },
                      onClose: function () {
                          editor.focus();
                      },
                      effects: $.telerik.fx.toggle.defaults()
                  })
                .data('tWindow');
        }
        $(htmlSourcePopup.element).find('textarea').text(html);
        htmlSourcePopup.center().open();
    }
    </script>
@{Html.Telerik().ScriptRegistrar().OnDocumentReady(@<text>
			$('.t-html').click(showHtml)
		  </text>); }